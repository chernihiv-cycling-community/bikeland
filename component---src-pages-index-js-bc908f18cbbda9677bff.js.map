{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Index","allMarkdownRemark","data","useTranslations","hello","subline","latestPosts","category","allPosts","postList","edges","className","title","text","style","margin","map","node","frontmatter","background","date","description","image","timeToRead","slug","fields","to","query"],"mappings":"2FAAA,8IAkEeA,UAxDD,SAAC,GAAqC,IAA3BC,EAA0B,EAAlCC,KAAQD,kBAA0B,EAGWE,cAApDC,EAHyC,EAGzCA,MAAOC,EAHkC,EAGlCA,QAAmBC,GAHe,EAGzBC,SAHyB,EAGfD,aAAaE,EAHE,EAGFA,SAEzCC,EAAWR,EAAkBS,MAEnC,OACE,yBAAKC,UAAU,YACb,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,CAAWC,KAAMT,IACjB,2BAAIC,GACJ,wBAAIS,MAAO,CAAEC,OAAO,YACpB,4BACE,gCAAST,IAGX,6BAEA,kBAAC,IAAD,KACGG,EAASO,KACR,oBACEC,KADF,IAEIC,YACEC,EAHN,EAGMA,WACAZ,EAJN,EAIMA,SACAa,EALN,EAKMA,KACAC,EANN,EAMMA,YACAT,EAPN,EAOMA,MACAU,EARN,EAQMA,MAEFC,EAVJ,EAUIA,WACUC,EAXd,EAWIC,OAAUD,KAXd,OAcE,kBAAC,IAAD,CACEA,KAAI,SAAWA,EACfL,WAAYA,EACZZ,SAAUA,EACVa,KAAMA,EACNG,WAAYA,EACZX,MAAOA,EACPS,YAAaA,EACbC,MAAOA,QAMf,6BAEA,kBAAC,IAAD,CAAeI,GAAE,UAAalB,KAO7B,IAAMmB,EAAK","file":"component---src-pages-index-js-bc908f18cbbda9677bff.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/PostItem\"\nimport TitlePage from \"../components/TitlePage\"\nimport LocalizedLink from \"../components/LocalizedLink\"\nimport useTranslations from \"../components/useTranslations\"\n\nimport * as S from \"../components/ListWrapper/styled\"\n\nconst Index = ({ data: { allMarkdownRemark } }) => {\n  // useTranslations is aware of the global context (and therefore also \"locale\")\n  // so it'll automatically give back the right translations\n  const { hello, subline, category, latestPosts, allPosts } = useTranslations()\n\n  const postList = allMarkdownRemark.edges\n\n  return (\n    <div className=\"homepage\">\n      <SEO title=\"Home\" />\n      <TitlePage text={hello} />\n      <p>{subline}</p>\n      <hr style={{ margin: `2rem 0` }} />\n      <h2>\n        <strong>{latestPosts}</strong>\n      </h2>\n\n      <br />\n\n      <S.ListWrapper>\n        {postList.map(\n          ({\n            node: {\n              frontmatter: {\n                background,\n                category,\n                date,\n                description,\n                title,\n                image\n              },\n              timeToRead,\n              fields: { slug }\n            }\n          }) => (\n            <PostItem\n              slug={`/blog/${slug}`}\n              background={background}\n              category={category}\n              date={date}\n              timeToRead={timeToRead}\n              title={title}\n              description={description}\n              image={image}\n            />\n          )\n        )}\n      </S.ListWrapper>\n\n      <br />\n\n      <LocalizedLink to={`/blog/`}>{allPosts}</LocalizedLink>\n    </div>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query Index($locale: String!, $dateFormat: String!) {\n    allMarkdownRemark(\n      filter: {\n        fields: { locale: { eq: $locale } }\n        fileAbsolutePath: { regex: \"/(blog)\\/.*.md$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 2\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            description\n            category\n            background\n            image\n            date(formatString: $dateFormat)\n          }\n          timeToRead\n          fields {\n            locale\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}